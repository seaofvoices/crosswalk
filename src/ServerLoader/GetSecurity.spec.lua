return function()
	local GetSecurity = require(script.Parent[script.Name:match('(.+)%.spec$')])

	it('should return `None` if the given name contains `_danger`', function()
		expect(GetSecurity('test_danger')).to.equal('None')
		expect(GetSecurity('test_danger_event')).to.equal('None')
		expect(GetSecurity('test_danger_func')).to.equal('None')
		expect(GetSecurity('_danger')).to.equal('None')
	end)

	it('should return `Low` if the given name contains `_risky`', function()
		expect(GetSecurity('test_risky')).to.equal('Low')
		expect(GetSecurity('test_risky_event')).to.equal('Low')
		expect(GetSecurity('test_risky_func')).to.equal('Low')
		expect(GetSecurity('_risky')).to.equal('Low')
	end)

	it('should work with an empty string', function()
		expect(function() GetSecurity('') end).never.to.throw()
	end)

	it('should return `High` when it does not match any other pattern', function()
		expect(GetSecurity('')).to.equal('High')
		expect(GetSecurity('function')).to.equal('High')
		expect(GetSecurity('hey_test')).to.equal('High')
		expect(GetSecurity('test_func')).to.equal('High')
		expect(GetSecurity('danger_event')).to.equal('High')
		expect(GetSecurity('risky_event')).to.equal('High')
	end)
end