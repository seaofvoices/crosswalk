image: python:3.8

stages:
  - download
  - install
  - build
  - test
  - pre-deploy
  - deploy

.only-mr-and-master: &only-mr-and-master
  only:
    - master
    - merge_requests

foreman:
  image: curlimages/curl:latest
  stage: download
  variables:
    FOREMAN_VERSION: https://github.com/jeparlefrancais/foreman/releases/download/v1.0.2-alpha/foreman-1.0.2-alpha-linux.zip
  script:
    - echo download foreman at $FOREMAN_VERSION
    - curl $FOREMAN_VERSION -L -o foreman.zip
    - unzip foreman.zip
    - mkdir downloads
    - mv foreman downloads/
    - chmod +x ./downloads/foreman
  artifacts:
    paths:
      - downloads
    expire_in: 1 week
  <<: *only-mr-and-master
  needs: []

tools:
  stage: install
  script:
    - export PATH=$PATH:./downloads
    - foreman --version
    - foreman install
    - ls ~/.foreman/bin
    - mkdir tools
    - mv ~/.foreman/bin/* tools
  artifacts:
    paths:
      - tools
    expire_in: 1 week
  <<: *only-mr-and-master
  needs:
    - foreman

.tools-path: &tools-path
  before_script:
    - export PATH=$PATH:$(realpath tools)

selene-lint:
  stage: test
  <<: *only-mr-and-master
  <<: *tools-path
  script:
    - selene generate-roblox-std
    - selene src
  needs:
    - tools

style-check:
  stage: test
  <<: *only-mr-and-master
  <<: *tools-path
  script:
    - stylua --check src
  needs:
    - tools

build-assets:
  stage: build
  <<: *only-mr-and-master
  <<: *tools-path
  script:
    - ./scripts/build-assets.sh
  artifacts:
    paths:
      - build
  needs:
    - tools

build-docs:
  stage: pre-deploy
  <<: *only-mr-and-master
  script:
    - python -m pip install -r requirements.txt
    - mkdir -p ./docs/releases
    - rm -rf ./docs/releases/master
    - cp -rf ./build ./docs/releases/master
    - mkdocs build
  artifacts:
    paths:
      - site
  needs:
    - build-assets

pages:
  stage: deploy
  script:
    - mv site public
  artifacts:
    paths:
      - public
  only:
    - master
  needs:
    - build-docs
